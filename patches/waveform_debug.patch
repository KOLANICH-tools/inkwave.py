From afc176f7b9dca2535532401fb02979c3a722089b Mon Sep 17 00:00:00 2001
From: KOLANICH <kolan_n@mail.ru>
Date: Mon, 8 Nov 2021 20:17:39 +0300
Subject: [PATCH] This patch adds some tracing to KS-generates source in order
 to test and debug the KS-based implementation.

---
 inkwave/kaitai/eink_wbf.py | 12 ++++++++++++
 1 file changed, 12 insertions(+)

diff --git a/inkwave/kaitai/eink_wbf.py b/inkwave/kaitai/eink_wbf.py
index a33a223..1edfaa8 100644
--- a/inkwave/kaitai/eink_wbf.py
+++ b/inkwave/kaitai/eink_wbf.py
@@ -51,6 +51,7 @@ class EinkWbf(KaitaiStruct):
         self._parent = _parent
         self._root = _root if _root else self
         self._read()
+        self.debug = False
 
     def _read(self):
         self.header = EinkWbf.Header(self._io, self, self._root)
@@ -359,13 +360,24 @@ class EinkWbf(KaitaiStruct):
                             self.k = k
                             self._read()
 
+                        def pp(self, *args, **kwargs):
+                            if self._root.debug and self.k >= 0:
+                                print(*args, **kwargs)
+
                         def _read(self):
                             if not (self.is_end_of_stream):
                                 self.current_byte = self._io.read_u1()
+                                if self._root.debug:
+                                    print("{}, {}".format(self._io.pos() - 1, hex(self.current_byte)[2:]))
+
+                                if not self.is_terminator:
+                                    self.pp("s", (self.s.s0, self.s.s1, self.s.s2, self.s.s3), self.k)
 
                             if self.should_read_count:
                                 self.count_read = self._io.read_u1()
 
+                            if not self.is_terminator:
+                                self.pp("count {:d}".format(self.count), self.k)
 
                         @property
                         def is_first(self):
-- 
2.32.0

